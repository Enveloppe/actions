name: Get lastest release from template
on:
  workflow_call:
    inputs:
      AUTO_MERGE:
        type: boolean
        description: 'Auto merge PR'
        required: true
        default: false
      EXCLUDED-FILES:
        type: string
        description: "Path to file that mustn't be updated. Separate multiple files by a space."
        required: false
        default: ''
      BASE_BRANCH:
        type: string
        description: 'Base branch to create PR'
        required: false
        default: 'main'
    secrets:
      GH_TOKEN:
        required: true
      AUTHOR_EMAIL:
        required: false
      AUTHOR_NAME:
        required: false
jobs:
  get-env:
    runs-on: ubuntu-latest
    outputs:
      update: ${{ steps.version.outputs.update }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: get template version
        uses: robinraju/release-downloader@main
        with:
          latest: true
          repository: "ObsidianPublisher/sync_template"
          fileName: "update.txt"
      - name: compare version.txt and update.txt
        id: version
        run: |
          if [ ! -f version.txt ]; then
            mv update.txt version.txt
            echo "update=true" > $GITHUB_OUTPUT
          elif [[ "$(cat version.txt)" < "$(cat update.txt)" ]]; then
            echo "update=true" > $GITHUB_OUTPUT
            rm version.txt
            mv update.txt version.txt
          else
            echo "update=false" > $GITHUB_OUTPUT
            rm update.txt
          fi
  update-repo:
    runs-on: ubuntu-latest
    needs: get-env
    if: ${{ needs.get-env.outputs.update == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.BASE_BRANCH || 'main' }}
          fetch-depth: 0
      - name: Get release from template
        uses: robinraju/release-downloader@main
        with:
          latest: true
          fileName: "release.zip"
          repository: "ObsidianPublisher/sync_template"
          extract: true
      - name: Remove excluded files & comments
        if: ${{ inputs.EXCLUDED-FILES != '' }}
        run: |
          zip -d release.zip ${{inputs.EXCLUDED-FILES}} overrides/partials/comments.html
      - name: Remove comments only (no excluded files found)
        if: ${{ !inputs.EXCLUDED-FILES }}
        run: |
          zip -d release.zip overrides/partials/comments.html
      - name: Unzip release
        run: |
          unzip -o release.zip
          rm release.zip
      - name: list changed files
        id: changed
        uses: tj-actions/changed-files@main
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: Update from template
          title: "[BUMP] Update from template"
          body: |
            ${{ steps.changed.outputs.all_changed_files_count}} files changed:
            ```
            ${{ steps.changed.outputs.all_changed_files }}
            ```
          labels: |
            update
          branch: update
          base: ${{ inputs.BASE_BRANCH || 'main' }}
          delete-branch: true
      - name: AutoMerging
        if: ${{ steps.cpr.outputs.pull-request-operation == 'created' && inputs.AUTO_MERGE }}
        uses: peter-evans/enable-pull-request-automerge@main
        with:
          token: ${{ secrets.GH_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
