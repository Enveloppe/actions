name: Get lastest release from template
on:
  workflow_call:
    inputs: 
      AUTO_MERGE:
        type: boolean
        description: 'Auto merge PR'
        required: true
        default: false
    secrets:
      GH_TOKEN:
        required: true
jobs:
  get-env:
    runs-on: ubuntu-latest
    outputs:
      update: ${{ steps.version.outputs.update }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: get template version
        uses: robinraju/release-downloader@main
        with:
          latest: true
          repository: "ObsidianPublisher/sync_template"
          fileName: "update.txt"
      - name: compare version.txt and update.txt
        id: version
        run: |
          if [ ! -f version.txt ]; then
            mv update.txt version.txt
            echo "update=true" > $GITHUB_OUTPUT
          elif [[ "$(cat version.txt)" < "$(cat update.txt)" ]]; then
            echo "update=true" > $GITHUB_OUTPUT
            rm version.txt
            mv update.txt version.txt
          else
            echo "update=false" > $GITHUB_OUTPUT
            rm update.txt
          fi
  update-repo:
    runs-on: ubuntu-latest
    needs: get-env
    if: ${{ needs.get-env.outputs.update == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get release from template
        uses: robinraju/release-downloader@main
        with:
          latest: true
          fileName: "release.zip"
          repository: "ObsidianPublisher/sync_template"
          extract: true
      - name: Unzip release
        run: unzip release.zip
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Update from template"
      - name: diff changed
        id: diff
        run: |
          echo "diff=$(git diff --name-only HEAD^ HEAD)" >> $GITHUB_OUTPUT
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: Update from template
          title: "[BUMP] Update from template"
          body: |
            files changed:
            ```
            ${{ steps.diff.outputs.diff }}
            ```
          labels: |
            update
          branch: update_repo
          delete-branch: true
      - name: AutoMerging 
        if: ${{ steps.cpr.outputs.pull-request-operation == 'created' && inputs.AUTO_MERGE }}
        uses: peter-evans/enable-pull-request-automerge@main
        with:
          token: ${{ secrets.GH_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
